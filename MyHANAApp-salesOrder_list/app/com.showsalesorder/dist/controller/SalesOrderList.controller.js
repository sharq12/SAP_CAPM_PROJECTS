sap.ui.define(["sap/ui/core/mvc/Controller","sap/ui/model/json/JSONModel","sap/m/MessageBox","sap/m/MessageToast","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/ui/model/Sorter","sap/m/ColumnListItem","sap/m/Input","sap/m/Text"],(e,t,s,a,r,i,n,o,u,l)=>{"use strict";return e.extend("com.showsalesorder.controller.SalesOrderList",{onInit(){this.oEditableTemplate=new o({cells:[new u({value:"{soNumber}",change:[this.onInputChange,this]}),new u({value:"{customerName}",change:[this.onInputChange,this]}),new u({value:"{customerNumber}",change:[this.onInputChange,this]}),new u({value:"{orderDate}",change:[this.onInputChange,this]}),new u({value:"{PoNumber}",change:[this.onInputChange,this]}),new u({value:"{inquiryNumber}",change:[this.onInputChange,this]}),new u({value:"{totalOrderItems}",change:[this.onInputChange,this]})]});this.oSaveTemplate=new o({cells:[new l({text:"{soNumber}"}),new l({text:"{customerName}"}),new l({text:"{customerNumber}"}),new l({text:"{orderDate}"}),new l({text:"{PoNumber}"}),new l({text:"{inquiryNumber}"}),new l({text:"{totalOrderItems}"})]})},onPressGo:function(e){var t=this.byId("idCustName").getValue();var s=this.byId("idPoNo").getValue();var a=this.byId("idSONo").getValue();var n=[];if(t){var o=new r("customerName",i.Contains,t);n=[...n,o]}if(s){var o=new r("PoNumber",i.EQ,s);n=[...n,o]}if(a){var o=new r("soNumber",i.EQ,a);n=[...n,o]}this.byId("idSalesTable").getBinding("items").filter(n)},onPressReset:function(e){this.byId("idCustName").setValue("");this.byId("idPoNo").setValue("");this.byId("idSONo").setValue("");this.byId("idSalesTable").getBinding("items").filter([])},getTodayDate:function(){var e=new Date;var t=e.getDate().toString().padStart(2,"0");var s=(e.getMonth()+1).toString().padStart(2,"0");var a=e.getFullYear();return`${a}-${s}-${t}`},onPressSave:function(){var e=this.byId("idsoNumber").getValue();var t=this.getTodayDate();var a=this.byId("idcustomerName").getValue();var r=this.byId("idcustomerNumber").getValue();var i=this.byId("idPoNumber").getValue();var n=this.byId("idinquiryNumber").getValue();var o=this.byId("idtotalOrderItems").getValue();var u=this;var l={soNumber:e,orderDate:t,customerName:a,customerNumber:r,PoNumber:i,inquiryNumber:n,totalOrderItems:o};var d=this.getOwnerComponent().getModel();this.byId("idSalesTable").getBinding("items").create({soNumber:l["soNumber"],orderDate:l["orderDate"],customerName:l["customerName"],customerNumber:l["customerNumber"],PoNumber:l["PoNumber"],inquiryNumber:l["inquiryNumber"],totalOrderItems:l["totalOrderItems"]}).created().then(function(){u.doInputValueClear();s.success(`${l["soNumber"]} is created`)}).catch(function(e){s.error(e)})},doInputValueClear:function(){this.byId("idsoNumber").setValue("");this.byId("idcustomerName").setValue("");this.byId("idcustomerNumber").setValue("");this.byId("idPoNumber").setValue("");this.byId("idinquiryNumber").setValue("");this.byId("idtotalOrderItems").setValue("")},onPressCancel:function(){this.doInputValueClear()},onPressCreate:function(e){},onSalesOrderChange:function(e){var t=e.getParameter("listItem").getBindingContext().getProperty("soNumber");this.byId("_IDPDelete").setEnabled(true);this.byId("_IDPDelete").setText(`Delete SO - ${t}`)},onPressDelete:function(e){var t=this.byId("idSalesTable").getSelectedItem();if(t){var s=t.getBindingContext().getObject().soNumber;t.getBindingContext().delete("$auto").then(function(){a.show(s+" SuccessFully Deleted")}.bind(this),function(e){a.show("Deletion Error: ",e)})}else{a.show("Please Select a Row to Delete")}this.byId("_IDPDelete").setEnabled(false);this.byId("_IDPDelete").setText(`Delete SO`)},rebindTable:function(e,t){this.byId("idSalesTable").bindItems({path:"/Interactions_SalesOrders",template:e,templateShareable:true}).setKeyboardMode(t)},onPressEdit:function(e){console.log("onPressEdit");this.byId("_IDPDelete").setEnabled(false);this.rebindTable(this.oEditableTemplate,"Edit")},onPressEditSave:function(e){console.log("onPressEditSave");this.refreshModel();this.rebindTable(this.oSaveTemplate,"Navigation")},makeChangesAndSubmit:function(e,t){const s=this;var r="$auto";if(s.getView().getModel().hasPendingChanges(r)){s.getView().getModel().submitBatch(r).then(r=>{s.makeChangesAndSubmit(e,t);a.show("Record Updated Successfully")}).catch(e=>{a.show("Something went wrong",e.message)})}else{s.getView().getModel().refresh(r);e()}},refreshModel:function(){return new Promise((e,t)=>{this.makeChangesAndSubmit.call(this,e,t)})},onInputChange:function(){this.refreshModel()},onPressNav:function(e){}})});
//# sourceMappingURL=SalesOrderList.controller.js.map